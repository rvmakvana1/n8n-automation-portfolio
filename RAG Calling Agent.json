{
  "name": "RAG Calling Agent",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.question }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -64,
        -16
      ],
      "id": "0cf85678-d334-4ed9-ae3a-69beb9dec2b3",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -112,
        208
      ],
      "id": "dbc43466-1b76-454a-ab9d-cc997ccae5cf",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "NLIiyBAoOVfmRNeC",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.headers[\"cf-ray\"] }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        32,
        256
      ],
      "id": "33002347-3c94-43e0-8244-05051175f8a0",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "## Your Role: Knowledge Base Assistant\n\nYou are an expert assistant whose primary goal is to answer questions based ONLY on the information provided from the knowledge base.\n\nHere is the process you MUST follow:\n\n1.  **Analyze the User's Question:** First, carefully understand what the user is asking.\n\n2.  **Prioritize the Knowledge Base:** You have access to a special tool (Pinecone Vector Store) that can search through custom documents. Your absolute first priority is to use this tool to find the relevant information.\n\n3.  **Formulate Your Answer:**\n    * **IF** the tool provides relevant information (context), you MUST base your answer **strictly and only** on that information. Do not add any information from your own general knowledge. Start your answer by confirming you found the information in the documents, for example: \"According to the provided document...\" or \"Based on the information in the knowledge base...\".\n    * **IF** the tool returns no relevant information, OR if the information found is not sufficient to answer the question, you MUST first inform the user that you couldn't find the answer in the provided documents. Say something like: \"I could not find a specific answer in the uploaded documents. However, based on my general knowledge...\" and only then, provide a helpful answer from your general knowledge.\n\n4.  **Language:** Always respond in the same language as the user's question. If the question is in Gujarati, your answer must be in Gujarati.\n\nBy following this process, you will act as a reliable expert on the provided documents.",
        "pineconeIndex": {
          "__rl": true,
          "value": "myn8nrag",
          "mode": "list",
          "cachedResultName": "myn8nrag"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        144,
        208
      ],
      "id": "da02f2d7-b924-4a1d-be6a-5b74bfc105f2",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "TCM43dBk8BJiXgOO",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        224,
        416
      ],
      "id": "d6f6260d-3249-431c-bff0-bb0cb5fd18ab",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "NLIiyBAoOVfmRNeC",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "0257de90-dff7-4267-9fb4-0be883e70fc3",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -336,
        -16
      ],
      "id": "d9d7a6f4-9cc4-4a02-bdb0-07f14bd0f725",
      "name": "Webhook",
      "webhookId": "0257de90-dff7-4267-9fb4-0be883e70fc3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        304,
        -16
      ],
      "id": "e2d21230-b346-4d68-b538-25dbb6c546e7",
      "name": "Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b6d38409-4d8b-4876-8154-08e34b194cff",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c07abdf5e455ea93d182a6d7e1e832cc121a6166e5ac963c1b60742abb02c0d3"
  },
  "id": "UqcacEks206lGiEy",
  "tags": []
}